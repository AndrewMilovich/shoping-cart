{"version":3,"sources":["modules/shopping-cart/models/index.ts","modules/shopping-cart/components/AddItemForm.tsx","modules/shopping-cart/components/ItemsList.tsx","modules/shopping-cart/components/Total.tsx","modules/shopping-cart/components/ShoppingCart.tsx","theme.ts","App.tsx","index.tsx"],"names":["ALL_PRODUCTS","id","price","label","PRODUCTS_MAP","reduce","acc","product","AddItemBox","styled","Box","display","flex","marginTop","ItemSelectWrapper","FormControl","width","marginRight","QuantityInputWrapper","AddItemForm","useState","productId","setProductId","quantity","setQuantity","add","data","TextField","select","value","onChange","e","target","map","MenuItem","type","Button","onClick","variant","disabled","ItemsListWrapper","paddingTop","ItemsList","items","item","Grid","container","xs","Typography","ButtonGroup","TotalWrapper","Total","ShoppingCardWrapper","Paper","margin","padding","minHeight","ShoppingCartHeader","textTransform","fontWeight","fontSize","ShoppingCart","length","theme","createTheme","typography","fontFamily","join","Background","backgroundColor","grey","height","App","ThemeProvider","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.211f3468.chunk.js","sourcesContent":["export type Product = {\n  id: string;\n  price: number;\n  label: string;\n};\n\nexport type ShoppingCartItem = {\n  productId: string;\n  quantity: number;\n};\n\nexport const ALL_PRODUCTS: Product[] = [\n  {\n    id: \"bread-sku-id\",\n    price: 15,\n    label: \"Bread\"\n  },\n  {\n    id: \"eggs-sku-id\",\n    price: 20,\n    label: \"Eggs\"\n  },\n  {\n    id: \"milk-sku-id\",\n    price: 35,\n    label: \"Milk\"\n  },\n  {\n    id: \"cheese-sku-id\",\n    price: 45,\n    label: \"Cheese\"\n  }\n];\n\nexport const PRODUCTS_MAP = ALL_PRODUCTS.reduce(\n  (acc: { [key: string]: Product }, product) => {\n    acc[product.id] = product;\n    return acc;\n  },\n  {}\n);\n","import { Box, Button, FormControl, MenuItem, TextField } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport React, { useState } from \"react\";\n\nimport { ALL_PRODUCTS, ShoppingCartItem } from \"../models\";\n\nconst AddItemBox = styled(Box)(() => ({\n  display: \"flex\",\n  flex: 1,\n  marginTop: \"25px\"\n}));\n\nconst ItemSelectWrapper = styled(FormControl)(() => ({\n  width: \"200px\",\n  marginRight: \"20px\"\n}));\n\nconst QuantityInputWrapper = styled(FormControl)(() => ({\n  width: \"80px\",\n  marginRight: \"20px\"\n}));\n\ntype AddItemFormProps = {};\n\nconst AddItemForm: React.FC<AddItemFormProps> = () => {\n  const [productId, setProductId] = useState<string>(\"\");\n  const [quantity, setQuantity] = useState<number>(0);\n  const [product, setProduct] = useState([]);\n\n  const add = (data: any) => {\n    const newItem = {\n     name: productId,\n     quantity: quantity\n    };\n  };\n\n  return (\n    <AddItemBox>\n      <ItemSelectWrapper>\n        <TextField\n          select\n          value={productId}\n          onChange={(e) => setProductId(e.target.value)}\n          label=\"Product\"\n        >\n          {ALL_PRODUCTS.map((product) => (\n            <MenuItem key={product.id} value={product.id}>\n              {product.label}\n            </MenuItem>\n          ))}\n        </TextField>\n      </ItemSelectWrapper>\n      <QuantityInputWrapper>\n        <TextField\n          label=\"Quantity\"\n          type=\"number\"\n          onChange={(e) => setQuantity(+e.target.value)}\n          value={quantity}\n        />\n      </QuantityInputWrapper>\n      <Button\n        onClick={() => add}\n        variant=\"contained\"\n        disabled={!quantity || !productId}\n      >\n        Add\n      </Button>\n    </AddItemBox>\n  );\n};\n\nexport default AddItemForm;\n","import { Box, Button, ButtonGroup, Grid, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nimport { PRODUCTS_MAP, ShoppingCartItem } from \"../models\";\n\nconst ItemsListWrapper = styled(Box)(() => ({\n  paddingTop: 20\n}));\n\ntype ItemsListProps = {\n  items: ShoppingCartItem[];\n};\n\nconst ItemsList: React.FC<ItemsListProps> = ({ items }) => {\n  return (\n    <ItemsListWrapper>\n      {items.map((item) => {\n        const product = PRODUCTS_MAP[item.productId];\n        const price = product?.price || 0;\n\n        return (\n          <Grid container key={item.productId}>\n            <Grid item xs={12}>\n              <Typography>{product?.label}</Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Typography>{`${item.quantity} x $${price} = $${\n                item.quantity * price\n              }`}</Typography>\n            </Grid>\n            <ButtonGroup variant=\"outlined\" aria-label=\"outlined button group\">\n              <Button>+</Button>\n              <Button>-</Button>\n              <Button>x</Button>\n            </ButtonGroup>\n          </Grid>\n        );\n      })}\n    </ItemsListWrapper>\n  );\n};\n\nexport default ItemsList;\n","import { Box, Button, Grid, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\n\nimport { PRODUCTS_MAP, ShoppingCartItem } from \"../models\";\n\nconst TotalWrapper = styled(Box)(() => ({\n  paddingTop: 40\n}));\n\ntype TotalProps = {\n  items: ShoppingCartItem[];\n};\n\nconst Total: React.FC<TotalProps> = ({ items }) => {\n  return (\n    <TotalWrapper>\n      <Grid container>\n        <Grid item xs={6}>\n          <Typography>{`Total: $`}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Button variant=\"outlined\">Clear</Button>\n        </Grid>\n      </Grid>\n    </TotalWrapper>\n  );\n};\n\nexport default Total;\n","import { Paper, Typography } from \"@mui/material\";\nimport { styled } from \"@mui/material/styles\";\nimport { useState } from \"react\";\n\nimport { ShoppingCartItem } from \"../models\";\n\nimport AddItemForm from \"./AddItemForm\";\nimport ItemsList from \"./ItemsList\";\nimport Total from \"./Total\";\n\nconst ShoppingCardWrapper = styled(Paper)(() => ({\n  width: 600,\n  margin: \"auto\",\n  padding: 50,\n  minHeight: 500\n}));\n\nconst ShoppingCartHeader = styled(Typography)(() => ({\n  textTransform: \"uppercase\",\n  fontWeight: \"bold\",\n  fontSize: 24\n}));\n\nconst ShoppingCart = () => {\n  const [items, setItems] = useState<ShoppingCartItem[]>([]);\n\n\n  \n  return (\n    <ShoppingCardWrapper>\n      <ShoppingCartHeader>Shopping Cart</ShoppingCartHeader>\n      <AddItemForm />\n      {!!items.length && (\n        <>\n          <ItemsList items={items} />\n          <Total items={items} />\n        </>\n      )}\n    </ShoppingCardWrapper>\n  );\n};\n\nexport default ShoppingCart;\n","import { createTheme } from \"@mui/material/styles\";\n\nconst theme = createTheme({\n  typography: {\n    fontFamily: [\n      \"-apple-system\",\n      \"BlinkMacSystemFont\",\n      '\"Segoe UI\"',\n      \"Roboto\",\n      '\"Helvetica Neue\"',\n      \"Arial\",\n      \"sans-serif\",\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"'\n    ].join(\",\")\n  }\n});\n\nexport default theme;\n","import { Box } from \"@mui/material\";\nimport { grey } from \"@mui/material/colors\";\nimport { styled, ThemeProvider } from \"@mui/material/styles\";\n\nimport ShoppingCart from \"./modules/shopping-cart/components/ShoppingCart\";\n\nimport theme from \"./theme\";\n\nconst Background = styled(Box)(() => ({\n  backgroundColor: grey[200],\n  height: \"calc(100vh - 118px)\",\n  paddingTop: 100\n}));\n\nexport default function App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Background>\n        <ShoppingCart />\n      </Background>\n    </ThemeProvider>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}